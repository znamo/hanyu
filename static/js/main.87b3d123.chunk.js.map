{"version":3,"sources":["state/utils.ts","state/index.ts","state/unit8a.ts","state/unit8b.ts","state/unit9a.ts","state/unit9b.ts","state/unit10a.ts","state/unit10b.ts","types/index.tsx","components/card/Card.tsx","components/card_carousel/CardCarousel.tsx","components/control_options/ControlOptions.tsx","routs/index.tsx","components/recognize_characters/RecognizeCharacters.tsx","components/menu/index.tsx","components/menu/Menu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["generate","characters","pinyin","meaning","type","units","name","CardHidePropsDefaults","MyCard","elementIndex","totalCount","hide","Card","variant","className","CardContent","Typography","color","component","CardCarousel","cardList","count","carouselOptions","length","React","useState","hideFields","setHideFields","handleChange","event","target","checked","FormControlLabel","control","Checkbox","onChange","label","indicators","autoPlay","animation","navButtonsAlwaysVisible","map","word","index","ControlOptions","FormControl","FormLabel","FormGroup","unit","include","routes","path","unitsWithIncludeFlag","obj","includedUnits","setIncludedUnits","randomCardList","reduce","acc","cur","sort","Math","random","Grid","container","spacing","item","xs","sm","newState","el","Menu","open","setState","history","useHistory","handleMenuClick","push","Drawer","anchor","onClose","role","onClick","onKeyDown","List","ListItem","button","ListItemIcon","Fingerprint","ListItemText","primary","GridOn","Divider","App","menuState","setMenuState","toggleDrawer","state","key","AppBar","position","Toolbar","IconButton","edge","aria-label","Container","route","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87b3d123.chunk.js","sourcesContent":["import {CardProps} from './../types'\n\nexport const generate = (characters: string, pinyin: string, meaning: string, type: string): CardProps => ({\n    characters,\n    pinyin,\n    meaning,\n    type\n});\n\n","import unit3a from \"./unit3a\";\nimport unit3b from \"./unit3b\";\nimport unit4a from \"./unit4a\";\nimport unit4b from \"./unit4b\";\nimport unit5a from \"./unit5a\";\nimport unit5b from \"./unit5b\";\nimport unit6a from \"./unit6a\";\nimport unit6b from \"./unit6b\";\nimport unit7a from \"./unit7a\";\nimport unit7b from \"./unit7b\";\nimport unit8a from \"./unit8a\";\nimport unit8b from \"./unit8b\";\nimport unit9a from \"./unit9a\";\nimport unit9b from \"./unit9b\";\nimport unit10a from \"./unit10a\";\nimport unit10b from \"./unit10b\";\n\n\nconst units = [\n    // {name: 'unit3a', characters: unit3a},\n    // {name: 'unit3b', characters: unit3b},\n    // {name: 'unit4a', characters: unit4a},\n    // {name: 'unit4b', characters: unit4b},\n    // {name: 'unit5a', characters: unit5a},\n    // {name: 'unit5b', characters: unit5b},\n    // {name: 'unit6a', characters: unit6a},\n    // {name: 'unit6b', characters: unit6b},\n    // {name: 'unit7a', characters: unit7a},\n    // {name: 'unit7b', characters: unit7b},\n    {name: 'unit8a', characters: unit8a},\n    {name: 'unit8b', characters: unit8b},\n    {name: 'unit9a', characters: unit9a},\n    {name: 'unit9b', characters: unit9b},\n    {name: 'unit10a', characters: unit10a},\n    {name: 'unit10b', characters: unit10b}\n]\n\nexport default units","import {generate} from './utils'\n\nconst unit8a = [\n     generate('金融', 'jīnróng', 'finance', 'n.'),\n     generate('贸易', 'màoyì', 'trade', 'n.'),\n     generate('外贸', 'wàimào', 'foreign trade', 'n.'),\n     generate('市场', 'shìchǎng', 'market', 'n.'),\n     generate('领导', 'lǐngdǎo', 'leader; to lead', 'v./n.'),\n     generate('经理', 'jīnglǐ ', 'manager', 'n.'),\n     generate('手机', 'shǒujī', 'cellphone', 'n.'),\n     generate('短信', 'duǎnxìn', 'instant message', 'n.'),\n     generate('接', 'jiē', 'pick up (the phone)', 'v.'),\n     generate('通', 'tōng', 'get through', 'v.'),\n     generate('推迟', 'tuīchí', 'postpone', 'v.'),\n     generate('安排', 'ānpái', 'arrange;arrangement', 'v./n.'),\n     generate('访问', 'fǎngwèn', 'visit', 'v./n.'),\n     generate('参加', 'cānjiā', 'attend; take part in', 'v.'),\n     generate('航班', 'hángbān', 'flight', 'n.'),\n     generate('马上', 'mǎshàng', 'at once; soonad', 'v.'),\n     generate('这样', 'zhèyàng', 'like this, in this way, thus', 'pron.')\n];\n\nexport default unit8a;","import {generate} from './utils'\n\nconst unit8b = [\n     generate('怎么回事', 'zěnmehuíshì', 'what’s the matter?', ''),\n     generate('上班', 'shàngbān', 'go to work ', 'v.o.'),\n     generate('发生', 'fāshēng', 'happen; take place', 'v.'),\n     generate('事故', 'shìgù', 'accident', 'n.'),\n     generate('警察', 'jǐngchá', 'police; policeman', 'n.'),\n     generate('雨衣', 'yǔyī', 'raincoat', 'n.'),\n     generate('雨伞', 'yǔsǎn', 'umbrella', 'n.'),\n     generate('手', 'shǒu', 'hand', 'n.'),\n     generate('背', 'bèi', 'back', 'n.'),\n     generate('结果', 'jiéguǒ', 'result', 'n.'),\n     generate('检查', 'jiǎnchá', 'check', 'v.'),\n     generate('修', 'xiū', 'repair', 'v.'),\n     generate('撞', 'zhuàng', 'bump against; collide', 'v.'),\n     generate('摔', 'shuāi', 'fall', 'v.'),\n     generate('倒 ', 'dǎo', 'fall down', 'v.'),\n     generate('伤', 'shāng', 'to hurt; injury, wound', 'v./n.'),\n     generate('坏', 'huài', 'bad; broken', 'adj.'),\n     generate('破', 'pò', 'broken', 'adj.'),\n     generate('着', 'zhe', 'used to indicate the continuation of a state', 'part.')\n];\n\nexport default unit8b;","import {generate} from './utils'\n\nconst unit9a = [\n     generate('房子', 'fángzi', 'house', 'n.'),\n     generate('公寓', 'gōngyù', 'apartment', 'n.'),\n     generate('套', 'tào', 'a set of', 'MW'),\n     generate('出租 ', 'chūzū', 'rent out', 'v.'),\n     generate('签', 'qiān', 'sign, write', 'v.'),\n     generate('合同', 'hétong', 'contract', 'n.'),\n     generate('付', 'fù', 'pay', 'v.'),\n     generate('押金', 'yājīn', 'deposit', 'n.'),\n     generate('带 ', 'dài', 'take, bring, carry', 'v.'),\n     generate('搬', 'bān', 'move', 'v.'),\n     generate('锻炼', 'duànliàn', 'exercise, do physical training', 'v.'),\n     generate('累', 'lèi', 'tired', 'adj.'),\n     generate('楼', 'lóu', 'building; storey, floor', 'n.'),\n     generate('电梯', 'diàntī', 'elevator', 'n.'),\n     generate('电视机', 'diànshìjī', 'TV set', 'n.'),\n     generate('电冰箱', 'diànbīngxiāng', 'refrigerator', 'n.'),\n     generate('洗衣机', 'xǐyījī', 'washing machine', 'n.')\n];\n\nexport default unit9a;","import {generate} from './utils'\n\nconst unit9b = [\n     generate('生气', 'shēngqì', 'be angry;annoyed', 'adj.'),\n     generate('不像话', 'búxiànghuà', 'unreasonably', 'adv.'),\n     generate('电器', 'diànqì', 'electrical appliances', 'n.'),\n     generate('空调', 'kōngtiáo', 'air conditioner, air-conditioning', 'n.'),\n     generate('台', 'tái', 'MW for appliances and machines', 'MW'),\n     generate('旧', 'jiù', 'old', 'adj.'),\n     generate('拆', 'chāi', 'remove; disassemble', 'v.'),\n     generate('装', 'zhuāngi', 'install', 'v.'),\n     generate('送', 'sòng', 'send', 'v.'),\n     generate('如果', 'rúguǒ', 'if', 'conj.'),\n     generate('房东', 'fángdōng', 'landlord, landlady, owner', 'n.'),\n     generate('师傅', 'shīfu', 'technician; master worker', 'n.'),\n     generate('办法', 'bànfǎ', 'way, method', 'n.'),\n     generate('只好', 'zhǐhǎo', 'have to; be forced toad', 'v.'),\n     generate('一就', 'yījiù', 'as soon as…; once', ''),\n     generate('嘛', 'ma', 'used to intensify the tone of a pice of advice or a request', 'part.')\n];\n\nexport default unit9b;","import {generate} from './utils'\n\nconst unit10a = [\n    generate('场', 'chǎng', 'MW for events like movies, operas, sport matches or rain', ''),\n    generate('京剧', 'Jīngjù', 'Beijing Opera', 'n.'),\n    generate('武打戏', 'wǔdǎxì', 'acrobatic fighting drama', ''),\n    generate('电影', 'diànyǐng', 'movie', 'n.'),\n    generate('功夫片', 'gōngfupiàn', 'Kungfu movie', ''),\n    generate('演员 ', 'yǎnyuán', 'actor, actress', 'n.'),\n    generate('有名', 'yǒumíng', 'famous', 'adj.'),\n    generate('座位', 'zuòwèi', 'seat', 'n.'),\n    generate('眼睛', 'yǎnjīng', 'eye', 'n.'),\n    generate('报纸', 'bàozhǐ', 'newspaper', 'n.'),\n    generate('杂志', 'zázhì', 'magazine', 'n.'),\n    generate('懂', 'dǒng', 'understand', 'v.'),\n    generate('出租车', 'chūzūchē', 'taxi', 'n.'),\n    generate('堵车', 'dǔchē', 'traffic jam', 'v.o.'),\n    generate('放心 ', 'fàngxīn', 'don’t worry', 'v.o.'),\n    generate('出发', 'chūfā', 'set off', 'v.'),\n    generate('赶', 'gǎn ', 'rush for', 'v.'),\n    generate('挺', 'tǐng', 'very', 'adj.'),\n    generate('最好', 'zuìhǎo', 'had better, it would be better', 'adv.')\n\n];\n\nexport default unit10a;","import {generate} from './utils'\n\nconst unit10b = [\n    generate('平时', 'píngshí', '(in)\\tnormal\\ttimes;\\t(at)\\tordinary\\ttimes,\\tordinarily', ''),\n    generate('运动', 'yùndòng', 'physical\\texercise', 'n.'),\n    generate('爬', 'pá', 'climb,\\tcrawl', 'v.'),\n    generate('山顶', 'shāndǐng', 'mountaintop', 'n.'),\n    generate('跑步', 'pǎobù', 'run,\\tjog', 'v'),\n    generate('太极拳', 'tàijíquán', 'Taiji\\tBoxing', 'n.'),\n    generate('教', 'jiāo', 'to\\tteach', 'v.'),\n    generate('建议', 'jiànyì', 'suggest,\\tsuggestion', 'v./n.'),\n    generate('注意', 'zhùyì', 'pay\\tattention\\tto', 'v.'),\n    generate('动', 'dòng', 'move', 'v.'),\n    generate('安静', 'ānjìng', 'quiet', 'adj.'),\n    generate('懒', 'lǎn', 'lazy', 'adj.'),\n    generate('话', 'huà', 'speech', 'n.'),\n    generate('水', 'shuǐ', 'water', 'n.'),\n    generate('连…都/也…', 'lián…dōu/yě', 'even', ''),\n    generate('才', 'cái', 'only', 'adv.'),\n    generate('地', 'de', 'modify\\tan\\taction', 'Part.')\n];\n\nexport default unit10b;","import React from \"react\";\n\nexport interface CardHideProps {\n    characters: boolean,\n    pinyin: boolean,\n    meaning: boolean,\n    type: boolean\n}\n\nexport const CardHidePropsDefaults: CardHideProps = {\n    characters: false,\n    pinyin: false,\n    meaning: false,\n    type: false\n}\n\n\nexport interface CardProps {\n    characters: string,\n    pinyin: string\n    meaning: string\n    type?: string,\n    elementIndex?: number,\n    totalCount?: number,\n    hide?: CardHideProps\n}\n\n\n// export interface CardListProps {\n//   cardList: CardProps[]\n// }\n\nexport interface UnitProps {\n    name: string,\n    characters: CardProps[],\n    include: boolean\n}\n\nexport interface ControlOptionsProps {\n    units: UnitProps[],\n    handleChange?: (event: React.ChangeEvent<HTMLInputElement>) => void\n}","import React from 'react';\nimport {CardHidePropsDefaults, CardProps} from \"types\";\nimport {Card, CardContent, Typography} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport \"./card.scss\";\n\n\nconst MyCard: React.FC<CardProps> = ({characters, pinyin, meaning, type, elementIndex, totalCount, hide= CardHidePropsDefaults}) => {\n\n    return (\n        <Card variant=\"outlined\" className=\"card-container\">\n            <CardContent>\n                <Typography color=\"textSecondary\">\n                    {elementIndex}/{totalCount}\n                </Typography>\n                <Typography variant=\"h1\" component=\"h1\" color={\"textPrimary\"} className={hide.characters ? 'opacity-text' : \"\"}>\n                    {characters}\n                </Typography>\n                <Typography variant=\"h4\" component=\"h3\" color=\"textSecondary\"  className={hide.pinyin ? 'opacity-text' : \"\"}>\n                     {/*{hide.pinyin  pinyin}*/}\n                     {pinyin}\n                </Typography>\n                <Typography variant=\"h4\" component=\"h4\" className={hide.meaning ? 'opacity-text' : \"\"}>\n                    {meaning}\n                    {/*{hide.meaning meaning}*/}\n                    <br/>\n                    {type}\n                    {/*{hide.type type}*/}\n                </Typography>\n            </CardContent>\n            {/*<CardActions>*/}\n            {/*    <Button size=\"small\">Learn More</Button>*/}\n            {/*</CardActions>*/}\n        </Card>\n    );\n}\nexport default MyCard","import React from 'react';\nimport Card from \"components/card/Card\";\nimport {CardProps, CardHidePropsDefaults} from \"types\";\nimport Carousel, {CarouselProps} from 'react-material-ui-carousel';\nimport {CardContent, Checkbox, FormControlLabel, Card as MaterialCard} from \"@material-ui/core\";\nimport './cardCarousel.scss';\n\n\nconst CardCarousel: React.FC<{ cardList: CardProps[], carouselOptions?: CarouselProps }> = ({\n                                                                                                cardList,\n                                                                                                carouselOptions\n                                                                                            }) => {\n    const count = cardList.length;\n\n    const [hideFields, setHideFields] = React.useState(CardHidePropsDefaults);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setHideFields({...hideFields, [event.target.name]: event.target.checked});\n    };\n\n    return (\n        <>\n            <MaterialCard variant=\"outlined\">\n                Should Hide:\n                <CardContent>\n                    <FormControlLabel\n                        control={<Checkbox checked={hideFields.characters} onChange={handleChange} name=\"characters\"\n                                           color=\"primary\"/>} label=\"Characters\"/>\n                    <FormControlLabel\n                        control={<Checkbox checked={hideFields.pinyin} onChange={handleChange} name=\"pinyin\"\n                                           color=\"primary\"/>}\n                        label=\"Pinyin\"/>\n                    <FormControlLabel\n                        control={<Checkbox checked={hideFields.meaning} onChange={handleChange} name=\"meaning\"\n                                           color=\"primary\"/>} label=\"Meaning\"/>\n                    <FormControlLabel\n                        control={<Checkbox checked={hideFields.type} onChange={handleChange} name=\"type\"\n                                           color=\"primary\"/>}\n                        label=\"Type\"/>\n\n                </CardContent>\n            </MaterialCard>\n            <Carousel indicators={false} autoPlay={false} animation=\"slide\" navButtonsAlwaysVisible={true}>\n                {cardList.map((word: CardProps, index) => <Card key={index}\n                                                                characters={word.characters}\n                                                                pinyin={word.pinyin}\n                                                                meaning={word.meaning}\n                                                                type={word.type}\n                                                                hide={hideFields}\n                                                                totalCount={count}\n                                                                elementIndex={index + 1}/>)}\n\n            </Carousel>\n        </>\n    )\n};\n\nexport default CardCarousel;","import React from 'react';\nimport {ControlOptionsProps, UnitProps} from \"types\";\nimport {FormControlLabel, FormGroup, FormLabel, Checkbox, FormControl} from \"@material-ui/core\";\n\n\nconst ControlOptions: React.FC<ControlOptionsProps> = ({units, handleChange}) => {\n    return (\n        <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Units</FormLabel>\n            <FormGroup>\n                {units.map((unit: UnitProps) => (\n                    <FormControlLabel key={unit.name}\n                        control={<Checkbox checked={unit.include} onChange={handleChange} name={unit.name}/>}\n                        label={unit.name}\n                    />))}\n            </FormGroup>\n            {/*<FormHelperText>Be careful</FormHelperText>*/}\n        </FormControl>\n    );\n}\n\nexport default ControlOptions;","import RecognizeCharacters from \"../components/recognize_characters/RecognizeCharacters\";\n\nconst routes = [\n    {\n        path: \"/recognize\",\n        component: RecognizeCharacters\n    }\n];\n\nexport default routes;","import React, {useState, FC} from 'react';\nimport units from 'state';\nimport CardCarousel from \"components/card_carousel/CardCarousel\";\nimport ControlOptions from \"components/control_options/ControlOptions\";\nimport {CardProps, UnitProps} from \"types\";\nimport {Grid} from \"@material-ui/core\";\n\n\nconst RecognizeCharacters: FC<{}> = () => {\n\n    const unitsWithIncludeFlag = units.map(obj => ({...obj, include: false}));\n    const [includedUnits, setIncludedUnits] = useState(unitsWithIncludeFlag);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let newState = includedUnits.map(el => {\n            if (el.name === event.target.name) {\n                el.include = event.target.checked\n            }\n            return el\n        });\n        setIncludedUnits(newState)\n    };\n\n    const cardList = includedUnits.reduce<CardProps[]>((acc, cur: UnitProps) => cur.include ? [...acc, ...cur.characters] : acc, []);\n    const randomCardList = cardList.sort(() => Math.random() - 0.5);\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12} sm={4}>\n                <ControlOptions units={includedUnits} handleChange={handleChange}/>\n            </Grid>\n            <Grid item xs={12} sm={8}>\n                <div className=\"App\">\n                    <CardCarousel cardList={randomCardList}/>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default RecognizeCharacters","import Menu from './Menu'\nexport default Menu","import React, {KeyboardEvent, MouseEvent, useState, FC} from 'react';\nimport {Divider, Drawer, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\nimport {Fingerprint as FingerprintIcon, GridOn as GridOnIcon} from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\n\ninterface MenuProps {\n    open: boolean,\n    setState: (state: boolean) => (event: KeyboardEvent | MouseEvent) => void\n}\n\nexport const Menu: FC<MenuProps> = ({open, setState}) => {\n    let history = useHistory();\n    const handleMenuClick = (path: '/recognize' | '/grid') => (event: MouseEvent | TouchEvent): void => {\n        history.push(path)\n    }\n\n    return (\n        <Drawer anchor=\"left\" open={open} onClose={setState(false)}>\n            <div\n                role=\"presentation\"\n                onClick={setState(false)}\n                onKeyDown={setState(false)}\n            >\n                <List>\n                    <ListItem button onClick={handleMenuClick('/recognize')}>\n                        <ListItemIcon><FingerprintIcon/></ListItemIcon>\n                        <ListItemText primary={\"Recognize\"}/>\n                    </ListItem>\n\n                    <ListItem button onClick={handleMenuClick('/grid')}>\n                        <ListItemIcon><GridOnIcon/></ListItemIcon>\n                        <ListItemText primary={\"Grid\"}/>\n                    </ListItem>\n                </List>\n                <Divider/>\n            </div>\n        </Drawer>\n    );\n};\n\nexport default Menu","import React, {KeyboardEvent, MouseEvent, useState} from 'react';\nimport {MemoryRouter as Router} from 'react-router'\nimport {Switch, Route} from \"react-router-dom\";\nimport routes from 'routs'\nimport Menu from \"components/menu\";\nimport {Container, AppBar, Toolbar, IconButton} from \"@material-ui/core\";\nimport {Menu as MenuIcon} from \"@material-ui/icons\";\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.scss';\n\n\nfunction App() {\n\n    const [menuState, setMenuState] = useState(false);\n    const toggleDrawer = (state: boolean) => (event: KeyboardEvent | MouseEvent): void => {\n        if (event.type === 'keydown' && ((event as KeyboardEvent).key === 'Tab' || (event as KeyboardEvent).key === 'Shift')) {\n            return;\n        }\n        setMenuState(state);\n    };\n\n    return (\n        <Router>\n\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon onClick={toggleDrawer(true)}/>\n                    </IconButton>\n                </Toolbar>\n                {/*<Typography variant=\"h6\">*/}\n                {/*    中文*/}\n                {/*</Typography>*/}\n            </AppBar>\n\n            <Menu open={menuState} setState={toggleDrawer}/>\n\n            <Container>\n                <Switch>\n                    {routes.map((route, i) => <Route path={route.path} component={route.component} key={i}/>)}\n                </Switch>\n            </Container>\n\n        </Router>\n    );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}